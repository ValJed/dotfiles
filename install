#!/bin/bash

# Desktop environment
sudo pacman -S i3 i3lock polybar rofi feh xinput maim xclip 

# Terminal tools
sudo pacman -S alacritty neovim zsh tmux lazygit exa bat ripgrep fd tokei procs htop fzf zoxide postgresql-client yazi

# Apps
signal-desktop spotify-launcher blueman docker docker-compose

# In the case screen is tearing, check that you use the right graphic card.
# If needed install and configure compton.

# Install languages support for text editor (Neovim / Helix)
npm install -g vls dockerfile-language-server-nodejs vscode-langservers-extracted bash-language-server stylelint-lsp typescript-language-server typescript eslint_d djlint emmet-ls @volar/vue-language-server

cargo install stylua

# Install zap for zsh config
sh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.sh)

# Fonts (download on nerdfonts)
sudo cp -r ./fonts/Hack /usr/share/fonts/

# tmux package manager
# To install tmux TPM packages run prefix + I
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# Install nvm by following instructions from here: https://github.com/nvm-sh/nvm

# Install pnpm
curl -fsSL https://get.pnpm.io/install.sh | sh -

# Install Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# Cargo Watch
cargo install cargo-watch

# for Rust and Web Assembly
cargo install wasm-pack

# Lauch MDB docker container at startup
# Create file in /etc/X11/xinit/xinitrc.d containing:
docker start mdb

# Greenclip
# https://github.com/erebe/greenclip
# create files in /etc/X11/xinit/xinitrc.d folder with scripts
greenclip daemon

# LAPTOP

# For laptops, create files in /etc/X11/xinit/xinitrc.d folder with scripts
xrandr --output eDP1 --mode 2048x1152

# May not be needed
exec xinput set-prop "SYNA2393:00 06CB:7A13 Touchpad" "libinput Tapping Enabled" 1

# DESKTOP

# For desktops manage screen position this way, in same folder as desribed above
xrandr --output DP-4 --primary --pos 0x0 --output HDMI-0 --pos 1920x0

# Packages
easyeffects

# Neovim
mkdir ~/Documents/tools
git clone git@github.com:firefox-devtools/vscode-firefox-debug.git
npm run install && npm run build
